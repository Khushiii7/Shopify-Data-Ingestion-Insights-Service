generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Tenant {
  id           Int      @id @default(autoincrement())
  shopDomain   String   @unique
  shopId       String?  // optional shop id
  accessToken  String
  installedAt  DateTime @default(now())
  users        User[]
  customers    Customer[]
  products     Product[]
  orders       Order[]
  abandonedCheckouts AbandonedCheckout[]
}

model User {
  id           Int      @id @default(autoincrement())
  email        String   @unique
  passwordHash String
  tenant       Tenant?  @relation(fields: [tenantId], references: [id])
  tenantId     Int?
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
}

model Customer {
  id               Int     @id @default(autoincrement())
  tenant           Tenant  @relation(fields: [tenantId], references: [id])
  tenantId         Int
  shopifyCustomerId String  @unique
  email            String?
  firstName        String?
  lastName         String?
  phone            String?
  totalSpent       Decimal? @db.Decimal(12,2)
  raw              Json?
  createdAt        DateTime @default(now())
  updatedAt        DateTime @updatedAt
}

model Product {
  id               Int     @id @default(autoincrement())
  tenant           Tenant  @relation(fields: [tenantId], references: [id])
  tenantId         Int
  shopifyProductId String  @unique
  title            String
  handle           String?
  variants         Json?
  raw              Json?
  createdAt        DateTime @default(now())
  updatedAt        DateTime @updatedAt
}

model Order {
  id             Int     @id @default(autoincrement())
  tenant         Tenant  @relation(fields: [tenantId], references: [id])
  tenantId       Int
  shopifyOrderId String  @unique
  orderNumber    String?
  createdAt      DateTime?
  totalPrice     Decimal? @db.Decimal(12,2)
  currency       String?
  raw            Json?
  updatedAt      DateTime @updatedAt
}

model AbandonedCheckout {
  id             Int     @id @default(autoincrement())
  tenant         Tenant  @relation(fields: [tenantId], references: [id])
  tenantId       Int
  checkoutId     String  @unique
  email          String?
  lineItems      Json?
  createdAt      DateTime?
  raw            Json?
  updatedAt      DateTime @updatedAt
}